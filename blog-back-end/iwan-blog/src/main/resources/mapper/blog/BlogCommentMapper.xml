<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iwannnn.blog.mapper.BlogCommentMapper">
    
    <resultMap type="BlogComment" id="BlogCommentResult">
        <result property="commentId"    column="comment_id"    />
        <result property="blogId"    column="blog_id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="becommentUserId"    column="becomment_user_id"    />
        <result property="commentUserId"    column="comment_user_id"    />
        <result property="likes"    column="likes"    />
        <result property="content"    column="content"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectBlogCommentVo">
        select comment_id, blog_id, parent_id, becomment_user_id, comment_user_id, likes, content, create_time, update_time, remark from blog_comment
    </sql>

    <select id="selectBlogCommentList" parameterType="BlogComment" resultMap="BlogCommentResult">
        <include refid="selectBlogCommentVo"/>
        <where>  
            <if test="blogId != null "> and blog_id = #{blogId}</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="becommentUserId != null "> and becomment_user_id = #{becommentUserId}</if>
            <if test="commentUserId != null "> and comment_user_id = #{commentUserId}</if>
            <if test="likes != null "> and likes = #{likes}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
        </where>
    </select>
    
    <select id="selectBlogCommentByCommentId" parameterType="Long" resultMap="BlogCommentResult">
        <include refid="selectBlogCommentVo"/>
        where comment_id = #{commentId}
    </select>
        
    <insert id="insertBlogComment" parameterType="BlogComment" useGeneratedKeys="true" keyProperty="commentId">
        insert into blog_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blogId != null">blog_id,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="becommentUserId != null">becomment_user_id,</if>
            <if test="commentUserId != null">comment_user_id,</if>
            <if test="likes != null">likes,</if>
            <if test="content != null">content,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="blogId != null">#{blogId},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="becommentUserId != null">#{becommentUserId},</if>
            <if test="commentUserId != null">#{commentUserId},</if>
            <if test="likes != null">#{likes},</if>
            <if test="content != null">#{content},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBlogComment" parameterType="BlogComment">
        update blog_comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="blogId != null">blog_id = #{blogId},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="becommentUserId != null">becomment_user_id = #{becommentUserId},</if>
            <if test="commentUserId != null">comment_user_id = #{commentUserId},</if>
            <if test="likes != null">likes = #{likes},</if>
            <if test="content != null">content = #{content},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where comment_id = #{commentId}
    </update>

    <delete id="deleteBlogCommentByCommentId" parameterType="Long">
        delete from blog_comment where comment_id = #{commentId}
    </delete>

    <delete id="deleteBlogCommentByCommentIds" parameterType="String">
        delete from blog_comment where comment_id in 
        <foreach item="commentId" collection="array" open="(" separator="," close=")">
            #{commentId}
        </foreach>
    </delete>

    <select id="selectBlogCommentVos" resultType="BlogCommentVo">
        select comment_id, content from blog_comment
    </select>
</mapper>