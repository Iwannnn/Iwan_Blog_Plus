<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iwannnn.blog.mapper.BlogMusicMapper">
    
    <resultMap type="BlogMusic" id="BlogMusicResult">
        <result property="musicId"    column="music_id"    />
        <result property="name"    column="name"    />
        <result property="artist"    column="artist"    />
        <result property="lrc"    column="lrc"    />
        <result property="url"    column="url"    />
        <result property="createTime"    column="create_time"    />
        <result property="cover"    column="cover"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

	<resultMap type="BlogMusicVo" id="BlogMusicVoResult">
        <result property="musicId"    column="music_id"    />
        <result property="name"    column="name"    />
    </resultMap>

    <sql id="selectBlogMusicVo">
        select music_id, name, artist, lrc, url, create_time, cover, update_time, remark from blog_music
    </sql>

    <select id="selectBlogMusicList" parameterType="BlogMusic" resultMap="BlogMusicResult">
        <include refid="selectBlogMusicVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name = #{name}</if>
            <if test="artist != null  and artist != ''"> and artist = #{artist}</if>
            <if test="lrc != null  and lrc != ''"> and lrc = #{lrc}</if>
            <if test="url != null  and url != ''"> and url = #{url}</if>
            <if test="cover != null  and cover != ''"> and cover = #{cover}</if>
        </where>
    </select>
    
    <select id="selectBlogMusicByMusicId" parameterType="Long" resultMap="BlogMusicResult">
        <include refid="selectBlogMusicVo"/>
        where music_id = #{musicId}
    </select>
        
    <insert id="insertBlogMusic" parameterType="BlogMusic" useGeneratedKeys="true" keyProperty="musicId">
        insert into blog_music
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="artist != null">artist,</if>
            <if test="lrc != null">lrc,</if>
            <if test="url != null">url,</if>
            <if test="createTime != null">create_time,</if>
            <if test="cover != null">cover,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="artist != null">#{artist},</if>
            <if test="lrc != null">#{lrc},</if>
            <if test="url != null">#{url},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="cover != null">#{cover},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBlogMusic" parameterType="BlogMusic">
        update blog_music
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="artist != null">artist = #{artist},</if>
            <if test="lrc != null">lrc = #{lrc},</if>
            <if test="url != null">url = #{url},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="cover != null">cover = #{cover},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where music_id = #{musicId}
    </update>

    <delete id="deleteBlogMusicByMusicId" parameterType="Long">
        delete from blog_music where music_id = #{musicId}
    </delete>

    <delete id="deleteBlogMusicByMusicIds" parameterType="String">
        delete from blog_music where music_id in 
        <foreach item="musicId" collection="array" open="(" separator="," close=")">
            #{musicId}
        </foreach>
    </delete>

	<select id="selectBlogMusicVos" resultMap="BlogMusicVoResult">
		SELECT music_id ,name FROM blog_music
    </select>


	<select id="selectMusicForAplayer" resultType="AplayerMusic">
		SELECT name, artist, url, lrc, cover FROM blog_music
	</select>
</mapper>